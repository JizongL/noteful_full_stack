{"ast":null,"code":"import _classCallCheck from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/src/note/addNote.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport NotefulContext from '../contextFolder/notefulContext'; // note:\n// need to validate note name no repeat\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddNote, _React$Component);\n\n  function AddNote() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddNote)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      content: '',\n      folderId: '',\n      modified: ''\n    };\n\n    _this.newDate = function () {\n      var date = new Date();\n\n      _this.setState({\n        modified: date.toISOString()\n      });\n    };\n\n    _this.newNoteRequest = function (e) {\n      e.preventDefault();\n\n      _this.newDate();\n\n      if (!_this.state.folderId) fetch(\"http://localhost:9090/notes\", {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(_this.state)\n      }).then(function (res) {\n        if (!res.ok) {\n          return res.json().then(function (error) {\n            throw new Error(error);\n          });\n        }\n\n        return res.json();\n      }).then(function (data) {\n        console.log('added test', data);\n\n        _this.context.addNote(data);\n\n        _this.props.history.push('/');\n      });\n    };\n\n    _this.inputNameHanle = function (e) {\n      _this.setState({\n        name: e.target.value\n      });\n    };\n\n    _this.inputContentHandle = function (e) {\n      _this.setState({\n        content: e.target.value\n      });\n    };\n\n    _this.inputFolderHandle = function (e) {\n      var newFolder = e.target.value;\n\n      var foundFolder = _this.context.folders.filter(function (folder) {\n        return folder.name === newFolder;\n      });\n\n      console.log(foundFolder[0].id, 'test found folder');\n\n      _this.setState({\n        folderId: foundFolder[0].id\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.context);\n      console.log(this.context.folders[0], 'test folders');\n      console.log(JSON.stringify(this.state), 'test state json');\n      var folderOption = this.context.folders.map(function (folder) {\n        return React.createElement(\"option\", {\n          id: folder.id,\n          key: folder.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, folder.name);\n      });\n      return React.createElement(\"div\", {\n        className: \"add-note-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"add-note-form\",\n        onSubmit: function onSubmit(e) {\n          return _this2.newNoteRequest(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Name\", React.createElement(\"input\", {\n        placeholder: \"name\",\n        onChange: function onChange(e) {\n          return _this2.inputNameHanle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Content\", React.createElement(\"textarea\", {\n        placeholder: \"content\",\n        onChange: function onChange(e) {\n          return _this2.inputContentHandle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Folder\", React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.inputFolderHandle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"choose folder\"), folderOption)), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Back\"));\n    }\n  }]);\n\n  return AddNote;\n}(React.Component);\n\nAddNote.contextType = NotefulContext;\nexport default AddNote;","map":{"version":3,"sources":["/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/src/note/addNote.js"],"names":["React","Link","NotefulContext","AddNote","state","name","content","folderId","modified","newDate","date","Date","setState","toISOString","newNoteRequest","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","ok","json","error","Error","data","console","log","context","addNote","props","history","push","inputNameHanle","target","value","inputContentHandle","inputFolderHandle","newFolder","foundFolder","folders","filter","folder","id","folderOption","map","Component","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport NotefulContext from '../contextFolder/notefulContext';\n\n// note:\n// need to validate note name no repeat\n\n\n\n\nclass AddNote extends React.Component{\n  static contextType = NotefulContext\n  \n  state={\n    name:'',\n    content:'',\n    folderId:'',\n    modified:''\n  }\n  \n\n\n  newDate =()=>{\n    let date = new Date()\n    this.setState({modified:date.toISOString()})\n  }\n  newNoteRequest=(e)=>{\n    e.preventDefault()\n    this.newDate()\n    if(!this.state.folderId)\n    fetch(`http://localhost:9090/notes`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json'\n  },\n  body:JSON.stringify(this.state)\n}).then(res=>{\n  if(!res.ok){\n    return res.json().then(error=>{throw new Error(error)})\n  }\n  return res.json()\n}).then(\n  (data)=>{\n    console.log('added test',data)\n    this.context.addNote(data)\n    this.props.history.push('/')\n  })\n  }\n\n  inputNameHanle=(e)=>{\n    this.setState({name:e.target.value})\n  }\n\n  inputContentHandle=(e)=>{\n    this.setState({content:e.target.value})\n  }\n\n  inputFolderHandle=(e)=>{\n    let newFolder = e.target.value\n    const foundFolder = this.context.folders.filter(folder=>folder.name===newFolder)\n    console.log(foundFolder[0].id,'test found folder')\n    this.setState({folderId:foundFolder[0].id})\n  }\n\n  render(){\n    console.log(this.context)\n    console.log(this.context.folders[0],'test folders')\n    console.log(JSON.stringify(this.state),'test state json')\n    const folderOption = this.context.folders.map(folder=>\n       <option id ={folder.id} key={folder.id}>{folder.name}</option>\n     )\n\n\n\n    return(\n      <div className='add-note-container'>\n      <form className='add-note-form'\n      onSubmit={(e)=>this.newNoteRequest(e)}>\n        <label>Name\n        <input placeholder='name' onChange={(e)=>this.inputNameHanle(e)}/>\n        </label>\n        <label>Content\n        <textarea placeholder='content' onChange={(e)=>this.inputContentHandle(e)}/>\n        </label>\n        <label>Folder\n        <select onChange={(e)=>this.inputFolderHandle(e)}>\n        <option >choose folder</option>\n        {folderOption}\n        </select>\n        </label>\n\n      <button type='submit'>Submit</button>\n      </form>\n      <Link to='/'>Back</Link>\n      </div>\n    )\n  }\n}\n\nexport default AddNote"]},"metadata":{},"sourceType":"module"}