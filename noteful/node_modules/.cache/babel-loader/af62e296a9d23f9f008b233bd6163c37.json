{"ast":null,"code":"import _objectSpread from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/src/folder/AddFolder.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport NotefulContext from '../contextFolder/notefulContext';\nimport ValidateFolderName from './validationFolderName'; // note:\n// need to validate folder name with no repeat \n\nvar AddFolder =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddFolder, _React$Component);\n\n  function AddFolder(props) {\n    var _this;\n\n    _classCallCheck(this, AddFolder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFolder).call(this, props));\n\n    _this.handleInput = function (e) {\n      _this.setState({\n        name: e.target.value\n      }, function () {\n        _this.validateName(e.target.value);\n      });\n    };\n\n    _this.formSubmithandle = function (e) {\n      e.preventDefault();\n      console.log(_this.state, 'test state in submit handle');\n      fetch(\"http://localhost:9090/folders\", {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(_this.state)\n      }).then(function (res) {\n        if (!res.ok) {\n          return res.json().then(function (error) {\n            throw new Error(error);\n          });\n        }\n\n        return res.json();\n      }).then(function (data) {\n        console.log('added test', data);\n\n        _this.context.addFolder(data);\n\n        _this.props.history.push('/');\n      });\n    };\n\n    _this.state = {\n      name: '',\n      nameValid: false,\n      validationMessages: {\n        name: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AddFolder, [{\n    key: \"validateName\",\n    value: function validateName(fieldValue) {\n      var fieldError = _objectSpread({}, this.state.validationMessages);\n\n      var hasError = false;\n      fieldValue = fieldValue.trim();\n\n      if (fieldValue.length === 0) {\n        fieldError.name = 'Name is required';\n        hasError = true;\n      } else {\n        fieldError.name = '';\n        hasError = false;\n      }\n\n      this.setState({\n        validationMessages: fieldError,\n        nameValid: !hasError\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        className: \"add-new-folder-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"add-new-folder-form\",\n        onSubmit: function onSubmit(e) {\n          return _this2.formSubmithandle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Create a folder\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \" Name:\", React.createElement(\"input\", {\n        id: \"add-folder\",\n        name: \"add-folder\",\n        onChange: function onChange(e) {\n          return _this2.handleInput(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(ValidateFolderName, {\n        hasError: !this.state.nameValid,\n        message: this.state.validationMessages.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Back\"));\n    }\n  }]);\n\n  return AddFolder;\n}(React.Component);\n\nAddFolder.contextType = NotefulContext;\nexport default AddFolder;","map":{"version":3,"sources":["/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/src/folder/AddFolder.js"],"names":["React","Link","NotefulContext","ValidateFolderName","AddFolder","props","handleInput","e","setState","name","target","value","validateName","formSubmithandle","preventDefault","console","log","state","fetch","method","headers","body","JSON","stringify","then","res","ok","json","error","Error","data","context","addFolder","history","push","nameValid","validationMessages","fieldValue","fieldError","hasError","trim","length","Component","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport NotefulContext from '../contextFolder/notefulContext';\nimport ValidateFolderName from './validationFolderName'\n// note:\n// need to validate folder name with no repeat \n\nclass AddFolder extends React.Component{\n\n\n\n  static contextType = NotefulContext\n  constructor(props){\n    super(props)\n    this.state={\n      name:'',\n      nameValid:false,\n      validationMessages:{\n        name:''\n      }\n    }\n  }\n  \n  handleInput=(e)=>{\n    this.setState({name:e.target.value},()=>{this.validateName(e.target.value)})\n  }\n  \n\n\n  formSubmithandle=(e)=>{\n   \n    e.preventDefault()\n    console.log(this.state,'test state in submit handle')\n    fetch(`http://localhost:9090/folders`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json'\n  },\n  body:JSON.stringify(this.state)\n}).then(res=>{\n  if(!res.ok){\n    return res.json().then(error=>{throw new Error(error)})\n  }\n  return res.json()\n}).then(\n  (data)=>{\n    console.log('added test',data)\n    this.context.addFolder(data)\n    this.props.history.push('/')\n  }\n)\n  }\nvalidateName(fieldValue){\n  const fieldError={...this.state.validationMessages};\n  let hasError = false;\n  \n  fieldValue = fieldValue.trim()\n  if(fieldValue.length===0){\n    fieldError.name ='Name is required';\n    \n    hasError = true;\n    \n  }else{\n    fieldError.name = ''\n    hasError=false;\n  }\n  this.setState({\n    validationMessages:fieldError,\n    nameValid:!hasError\n  })\n}\n  render(){\n    console.log(this.state)\n    return(\n      <div className='add-new-folder-container'>\n        <form className='add-new-folder-form'\n        onSubmit={(e)=>this.formSubmithandle(e)}>\n        <h5>Create a folder</h5>\n      \n        <label> Name:\n        <input id='add-folder' name='add-folder'\n          onChange={(e)=>this.handleInput(e)}/>\n          <ValidateFolderName hasError={!this.state.nameValid} message={this.state.validationMessages.name}/>\n        </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n        <Link to='/'>Back</Link>\n      </div>\n    )\n  }\n}\n\nexport default AddFolder"]},"metadata":{},"sourceType":"module"}