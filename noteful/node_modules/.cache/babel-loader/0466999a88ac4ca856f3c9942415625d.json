{"ast":null,"code":"import _classCallCheck from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/src/note/Note.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport NotefulContext from '../contextFolder/notefulContext';\n\nvar noteRemoveRequest = function noteRemoveRequest(noteId, callback) {\n  fetch(\"http://localhost:9090/notes/\".concat(noteId), {\n    method: 'DELETE',\n    headers: {\n      'content-type': 'application/json'\n    }\n  }).then(function (res) {\n    if (!res.ok) {\n      return res.json().then(function (error) {\n        throw new Error(error);\n      });\n    }\n\n    return res.json();\n  }).then(function () {\n    callback(noteId);\n  });\n};\n\nvar Note =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Note, _React$Component);\n\n  function Note() {\n    _classCallCheck(this, Note);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Note).apply(this, arguments));\n  }\n\n  _createClass(Note, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var noteForRender = this.context.notes.filter(function (note) {\n        return note.id === _this.props.match.params.noteId;\n      });\n      console.log(noteForRender, 'test note for render');\n      return React.createElement(\"div\", {\n        className: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        key: noteForRender[0].id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/note/\".concat(noteForRender[0].id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, noteForRender[0].name)), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Modified \", noteForRender[0].modified))), noteForRender[0].content, React.createElement(\"button\", {\n        onClick: function onClick() {\n          return noteRemoveRequest(noteForRender[0].id, _this.context.removeNote);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Remove\"), React.createElement(Link, {\n        to: \"/folder/\".concat(noteForRender[0].folderId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Return\"));\n    }\n  }]);\n\n  return Note;\n}(React.Component);\n\nNote.contextType = NotefulContext;\nexport default Note;","map":{"version":3,"sources":["/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/src/note/Note.js"],"names":["React","Link","NotefulContext","noteRemoveRequest","noteId","callback","fetch","method","headers","then","res","ok","json","error","Error","Note","noteForRender","context","notes","filter","note","id","props","match","params","console","log","name","modified","content","removeNote","folderId","Component","contextType"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAEA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,IAAMC,iBAAiB,GAAC,SAAlBA,iBAAkB,CAACC,MAAD,EAAQC,QAAR,EAAmB;AACzCC,EAAAA,KAAK,uCAAgCF,MAAhC,GAA0C;AAC/CG,IAAAA,MAAM,EAAE,QADuC;AAE/CC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFsC,GAA1C,CAAL,CAKCC,IALD,CAKM,UAAAC,GAAG,EAAE;AACX,QAAG,CAACA,GAAG,CAACC,EAAR,EAAW;AACV,aAAOD,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,UAAAI,KAAK,EAAE;AAC3B,cAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACD,OAFK,CAAP;AAGA;;AAAA,WAAOH,GAAG,CAACE,IAAJ,EAAP;AAEF,GAZC,EAYCH,IAZD,CAYM,YAAI;AACVJ,IAAAA,QAAQ,CAACD,MAAD,CAAR;AACD,GAdC;AAeD,CAhBD;;IAmBMW,I;;;;;;;;;;;;;6BAEI;AAAA;;AACN,UAAMC,aAAa,GAAG,KAAKC,OAAL,CAAaC,KAAb,CAAmBC,MAAnB,CAA0B,UAAAC,IAAI;AAAA,eAClDA,IAAI,CAACC,EAAL,KAAW,KAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBpB,MADe;AAAA,OAA9B,CAAtB;AAEAqB,MAAAA,OAAO,CAACC,GAAR,CAAYV,aAAZ,EAA0B,sBAA1B;AACA,aACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,GAAG,EAAEA,aAAa,CAAC,CAAD,CAAb,CAAiBK,EAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AAAM,QAAA,EAAE,kBAAWL,aAAa,CAAC,CAAD,CAAb,CAAiBK,EAA5B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKL,aAAa,CAAC,CAAD,CAAb,CAAiBW,IAAtB,CADA,CADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgBX,aAAa,CAAC,CAAD,CAAb,CAAiBY,QAAjC,CAJA,CADF,CADA,EASGZ,aAAa,CAAC,CAAD,CAAb,CAAiBa,OATpB,EAUE;AACA,QAAA,OAAO,EAAE;AAAA,iBAAI1B,iBAAiB,CAACa,aAAa,CAAC,CAAD,CAAb,CAAiBK,EAAlB,EAAqB,KAAI,CAACJ,OAAL,CAAaa,UAAlC,CAArB;AAAA,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,EAaE,oBAAC,IAAD;AAAM,QAAA,EAAE,oBAAad,aAAa,CAAC,CAAD,CAAb,CAAiBe,QAA9B,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,CADF;AAoBD;;;;EA1BgB/B,KAAK,CAACgC,S;;AAAnBjB,I,CACGkB,W,GAAc/B,c;AA4BvB,eAAea,IAAf","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport NotefulContext from '../contextFolder/notefulContext'\n\nconst noteRemoveRequest=(noteId,callback)=>{\n  fetch(`http://localhost:9090/notes/${noteId}`, {\n  method: 'DELETE',\n  headers: {\n    'content-type': 'application/json'\n  },\n}).then(res=>{\n  if(!res.ok){\n   return res.json().then(error=>{\n      throw new Error(error)\n    })\n  }return res.json()\n  \n}).then(()=>{\n  callback(noteId)\n})\n}\n\n\nclass Note extends React.Component{\n  static contextType = NotefulContext;\n  render(){\n    const noteForRender = this.context.notes.filter(note=>\n      note.id ===this.props.match.params.noteId)\n    console.log(noteForRender,'test note for render')\n    return(\n      <div className='note'>\n      <ul>\n        <li key={noteForRender[0].id}>\n        <Link to={`/note/${noteForRender[0].id}`}>\n        <h6>{noteForRender[0].name}</h6>\n        </Link>\n        <span>Modified {noteForRender[0].modified}</span>\n      </li>\n      </ul>\n        {noteForRender[0].content}\n        <button\n        onClick={()=>noteRemoveRequest(noteForRender[0].id,this.context.removeNote)}\n        >Remove</button>\n        <Link to={`/folder/${noteForRender[0].folderId}`}>\n          Return\n        </Link>\n      </div>\n\n    )\n  }\n}\n\nexport default Note"]},"metadata":{},"sourceType":"module"}