{"ast":null,"code":"import _classCallCheck from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/src/note/addNote.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport NotefulContext from '../contextFolder/notefulContext'; // note:\n// need to validate note name no repeat\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddNote, _React$Component);\n\n  function AddNote() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddNote)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: '',\n      content: '',\n      folderId: ''\n    };\n\n    _this.inputNameHanle = function (e) {\n      _this.setState({\n        name: e.target.value\n      });\n    };\n\n    _this.inputContentHandle = function (e) {\n      _this.setState({\n        content: e.target.value\n      });\n    };\n\n    _this.inputFolderHandle = function (e) {\n      var newFolder = e.target.value;\n\n      var foundFolder = _this.context.folders.filter(function (folder) {\n        return folder.name === newFolder;\n      });\n\n      console.log(foundFolder[0].id, 'test found folder');\n\n      _this.setState({\n        folderId: foundFolder.id\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(JSON.stringify(this.state.folderId), 'test state json');\n      var folderOption = this.context.folders.map(function (folder) {\n        return React.createElement(\"option\", {\n          id: folder.id,\n          key: folder.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, folder.name);\n      });\n      return React.createElement(\"div\", {\n        className: \"add-note-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"add-note-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Name\", React.createElement(\"input\", {\n        placeholder: \"name\",\n        onChange: function onChange(e) {\n          return _this2.inputNameHanle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Content\", React.createElement(\"input\", {\n        placeholder: \"content\",\n        onChange: function onChange(e) {\n          return _this2.inputContentHandle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Folder\", React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.inputFolderHandle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, folderOption))), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Back\"));\n    }\n  }]);\n\n  return AddNote;\n}(React.Component);\n\nAddNote.contextType = NotefulContext;\nexport default AddNote;","map":{"version":3,"sources":["/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful/src/note/addNote.js"],"names":["React","Link","NotefulContext","AddNote","state","name","content","folderId","inputNameHanle","e","setState","target","value","inputContentHandle","inputFolderHandle","newFolder","foundFolder","context","folders","filter","folder","console","log","id","JSON","stringify","folderOption","map","Component","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport NotefulContext from '../contextFolder/notefulContext';\n\n// note:\n// need to validate note name no repeat\n\nclass AddNote extends React.Component{\n  static contextType = NotefulContext\n  \n  state={\n    name:'',\n    content:'',\n    folderId:''\n  }\n\n  inputNameHanle=(e)=>{\n    this.setState({name:e.target.value})\n  }\n\n  inputContentHandle=(e)=>{\n    this.setState({content:e.target.value})\n  }\n\n  inputFolderHandle=(e)=>{\n    let newFolder = e.target.value\n    const foundFolder = this.context.folders.filter(folder=>folder.name===newFolder)\n    console.log(foundFolder[0].id,'test found folder')\n    this.setState({folderId:foundFolder.id})\n  }\n\n  render(){\n    \n    console.log(JSON.stringify(this.state.folderId),'test state json')\n    const folderOption = this.context.folders.map(folder=>\n       <option id ={folder.id} key={folder.id}>{folder.name}</option>\n     )\n\n\n\n    return(\n      <div className='add-note-container'>\n      <form className='add-note-form'>\n        <label>Name\n        <input placeholder='name' onChange={(e)=>this.inputNameHanle(e)}/>\n        </label>\n        <label>Content\n        <input placeholder='content' onChange={(e)=>this.inputContentHandle(e)}/>\n        </label>\n        <label>Folder\n        <select onChange={(e)=>this.inputFolderHandle(e)}>\n        {folderOption}\n        </select>\n        </label>\n\n\n      </form>\n      <Link to='/'>Back</Link>\n      </div>\n    )\n  }\n}\n\nexport default AddNote"]},"metadata":{},"sourceType":"module"}