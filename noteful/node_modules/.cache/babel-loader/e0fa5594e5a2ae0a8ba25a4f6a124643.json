{"ast":null,"code":"import _classCallCheck from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/src/note/addNote.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport NotefulContext from '../contextFolder/notefulContext'; // note:\n// need to validate note name no repeat\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddNote, _React$Component);\n\n  function AddNote(props) {\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNote).call(this, props));\n\n    _this.newDate = function () {\n      var date = new Date();\n\n      _this.setState({\n        modified: date.toISOString()\n      });\n    };\n\n    _this.newNoteRequest = function (e) {\n      e.preventDefault();\n      console.log(JSON.stringify(_this.state), 'test this.state in request handle');\n      if (_this.state.folder) fetch(\"http://localhost:9090/api/notes\", {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(_this.state)\n      }).then(function (res) {\n        if (!res.ok) {\n          //return res.json().then(error=>{throw new Error(error)})\n          throw new Error(\"error\");\n        }\n\n        return res.json();\n      }).then(function (data) {\n        console.log('added test', data);\n\n        _this.context.addNote(data);\n\n        _this.props.history.push(\"/folder/\".concat(_this.state.folder));\n      });\n    };\n\n    _this.inputNameHanle = function (e) {\n      _this.setState({\n        name: e.target.value\n      });\n    };\n\n    _this.inputContentHandle = function (e) {\n      _this.setState({\n        content: e.target.value\n      });\n    };\n\n    _this.inputFolderHandle = function (e) {\n      var newFolder = e.target.value;\n\n      var foundFolder = _this.context.folders.filter(function (folder) {\n        return folder.folder_name === newFolder;\n      });\n\n      console.log(foundFolder[0].id, 'test found folder');\n\n      _this.setState({\n        folder: foundFolder[0].id\n      });\n    };\n\n    var _date = new Date().toISOString();\n\n    _this.state = {\n      name: '',\n      content: '',\n      folder: '',\n      date_added: _date\n    };\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(this.props.match, 'this.context test');\n      console.log(JSON.stringify(this.state), 'test state json');\n      var folderOption = this.context.folders.map(function (folder) {\n        return React.createElement(\"option\", {\n          id: folder.id,\n          key: folder.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, folder.folder_name);\n      });\n      return React.createElement(\"div\", {\n        className: \"add-note-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"add-note-form\",\n        onSubmit: function onSubmit(e) {\n          return _this2.newNoteRequest(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Name\", React.createElement(\"input\", {\n        placeholder: \"name\",\n        onChange: function onChange(e) {\n          return _this2.inputNameHanle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Content\", React.createElement(\"textarea\", {\n        placeholder: \"content\",\n        onChange: function onChange(e) {\n          return _this2.inputContentHandle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Folder\", React.createElement(\"select\", {\n        onChange: function onChange(e) {\n          return _this2.inputFolderHandle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"choose folder\"), folderOption)), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Back\"));\n    }\n  }]);\n\n  return AddNote;\n}(React.Component);\n\nAddNote.contextType = NotefulContext;\nexport default AddNote;","map":{"version":3,"sources":["/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/src/note/addNote.js"],"names":["React","Link","NotefulContext","AddNote","props","newDate","date","Date","setState","modified","toISOString","newNoteRequest","e","preventDefault","console","log","JSON","stringify","state","folder","fetch","method","headers","body","then","res","ok","Error","json","data","context","addNote","history","push","inputNameHanle","name","target","value","inputContentHandle","content","inputFolderHandle","newFolder","foundFolder","folders","filter","folder_name","id","date_added","match","folderOption","map","Component","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport NotefulContext from '../contextFolder/notefulContext';\n\n// note:\n// need to validate note name no repeat\n\n\n\n\nclass AddNote extends React.Component{\n  static contextType = NotefulContext\n  constructor(props){\n    super(props)\n    let date = new Date().toISOString()\n    this.state={\n      name:'',\n      content:'',\n      folder:'',\n      date_added:date\n    }\n  }\n  \n  \n\n\n  newDate =()=>{\n    let date = new Date()\n    this.setState({modified:date.toISOString()})\n  }\n  newNoteRequest=(e)=>{\n    e.preventDefault()\n    console.log(JSON.stringify(this.state),'test this.state in request handle')\n    if(this.state.folder)\n    fetch(`http://localhost:9090/api/notes`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json'\n  },\n  body:JSON.stringify(this.state)\n}).then(res=>{\n  if(!res.ok){\n    //return res.json().then(error=>{throw new Error(error)})\n    throw new Error(\"error\")\n  }\n  \n  return res.json()\n}).then(\n  (data)=>{\n    console.log('added test',data)\n    this.context.addNote(data)\n    this.props.history.push(`/folder/${this.state.folder}`)\n  })\n  }\n\n  inputNameHanle=(e)=>{\n    this.setState({name:e.target.value})\n  }\n\n  inputContentHandle=(e)=>{\n    \n    this.setState({content:e.target.value})\n  }\n\n  inputFolderHandle=(e)=>{\n    let newFolder = e.target.value\n    const foundFolder = this.context.folders.filter(folder=>folder.folder_name===newFolder)\n    console.log(foundFolder[0].id,'test found folder')\n    this.setState({folder:foundFolder[0].id})\n  }\n\n  render(){\n   \n    console.log(this.props.match,'this.context test')\n    \n    console.log(JSON.stringify(this.state),'test state json')\n    const folderOption = this.context.folders.map(folder=>\n       <option id ={folder.id} key={folder.id}>{folder.folder_name}</option>\n     )\n      \n\n\n    return(\n      <div className='add-note-container'>\n      <form className='add-note-form'\n      onSubmit={(e)=>this.newNoteRequest(e)}>\n        <label>Name\n        <input placeholder='name' onChange={(e)=>this.inputNameHanle(e)}/>\n        </label>\n        <label>Content\n        <textarea placeholder='content' onChange={(e)=>this.inputContentHandle(e)}/>\n        </label>\n        <label>Folder\n        <select onChange={(e)=>this.inputFolderHandle(e)}>\n        <option >choose folder</option>\n        {folderOption}\n        </select>\n        </label>\n\n      <button type='submit'>Submit</button>\n      </form>\n      <Link to='/'>Back</Link>\n      </div>\n    )\n  }\n}\n\nexport default AddNote"]},"metadata":{},"sourceType":"module"}