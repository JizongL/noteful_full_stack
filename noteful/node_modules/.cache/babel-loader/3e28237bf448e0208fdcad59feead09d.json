{"ast":null,"code":"import _objectSpread from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/src/folder/AddFolder.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport NotefulContext from '../contextFolder/notefulContext';\nimport ValidateFolderName from './validationFolderName'; // note:\n// need to validate folder name with no repeat \n\nvar AddFolder =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AddFolder, _React$Component);\n\n  function AddFolder(props) {\n    var _this;\n\n    _classCallCheck(this, AddFolder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFolder).call(this, props));\n\n    _this.handleInput = function (name) {\n      //console.log(e.target,'test handleinput')\n      _this.setState({\n        name: name\n      }, function () {\n        return _this.validateName(name);\n      });\n    };\n\n    _this.formSubmithandle = function (e) {\n      e.preventDefault(); //console.log(this.state,'test state in submit handle')\n\n      fetch(\"http://localhost:9090/api/folders/\", {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(_this.state)\n      }).then(function (res) {\n        // if(!res.ok){\n        //   return res.json().then(error=>{throw new Error(error)})\n        // }\n        return res.json();\n      }).then(function (data) {\n        //console.log('added test',data)\n        _this.context.addFolder(data);\n\n        _this.props.history.push('/');\n      });\n    };\n\n    _this.validateName = function (fieldValue) {\n      var fieldError = _objectSpread({}, _this.state.validationMessages);\n\n      var hasError = false; //fieldValue = fieldValue.trim()\n\n      console.log(fieldValue, 'test fieldvalue');\n\n      if (fieldValue.length === 0) {\n        fieldError.name = 'Name is required';\n        hasError = true;\n      } else {\n        fieldError.name = '';\n        hasError = false;\n      }\n\n      _this.setState({\n        validationMessages: fieldError,\n        nameValid: !hasError\n      });\n    };\n\n    _this.state = {\n      name: '',\n      nameValid: false,\n      validationMessages: {\n        name: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AddFolder, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //console.log(this.state)\n      return React.createElement(\"div\", {\n        className: \"add-new-folder-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"add-new-folder-form\",\n        onSubmit: function onSubmit(e) {\n          return _this2.formSubmithandle(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Create a folder\"), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \" Name:\", React.createElement(\"input\", {\n        id: \"add-folder\",\n        name: \"add-folder\",\n        onChange: function onChange(e) {\n          return _this2.handleInput(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(ValidateFolderName, {\n        hasError: !this.state.nameValid,\n        message: this.state.validationMessages.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Submit\")), React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Back\"));\n    }\n  }]);\n\n  return AddFolder;\n}(React.Component);\n\nAddFolder.contextType = NotefulContext;\nexport default AddFolder;","map":{"version":3,"sources":["/Users/tmmgeek/Documents/thinkful/Thinkful2019/react/reactRouter/NotefulApp/noteful_full_stack/noteful/src/folder/AddFolder.js"],"names":["React","Link","NotefulContext","ValidateFolderName","AddFolder","props","handleInput","name","setState","validateName","formSubmithandle","e","preventDefault","fetch","method","headers","body","JSON","stringify","state","then","res","json","data","context","addFolder","history","push","fieldValue","fieldError","validationMessages","hasError","console","log","length","nameValid","target","value","Component","contextType"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport NotefulContext from '../contextFolder/notefulContext';\nimport ValidateFolderName from './validationFolderName'\n// note:\n// need to validate folder name with no repeat \n\nclass AddFolder extends React.Component{\n\n\n\n  static contextType = NotefulContext\n  constructor(props){\n    super(props)\n    this.state={\n      name:'',\n      nameValid:false,\n      validationMessages:{\n        name:''\n      }\n    }\n  }\n  \n  handleInput=(name)=>{\n    //console.log(e.target,'test handleinput')\n    this.setState({name:name},()=>this.validateName(name))\n  }\n  \n\n\n  formSubmithandle=(e)=>{\n   \n    e.preventDefault()\n    //console.log(this.state,'test state in submit handle')\n    fetch(`http://localhost:9090/api/folders/`, {\n  method: 'POST',\n  headers: {\n    'content-type': 'application/json'\n  },\n  body:JSON.stringify(this.state)\n}).then(res=>{\n  // if(!res.ok){\n  //   return res.json().then(error=>{throw new Error(error)})\n  // }\n  return res.json()\n}).then(\n  (data)=>{\n    //console.log('added test',data)\n    this.context.addFolder(data)\n    this.props.history.push('/')\n  }\n)\n  }\nvalidateName=(fieldValue)=>{\n  const fieldError={...this.state.validationMessages};\n  let hasError = false;\n  \n  //fieldValue = fieldValue.trim()\n  console.log(fieldValue,'test fieldvalue')\n  if(fieldValue.length===0){\n    fieldError.name ='Name is required';\n    \n    hasError = true;\n    \n  }else{\n    fieldError.name = ''\n    hasError=false;\n  }\n  this.setState({\n    validationMessages:fieldError,\n    nameValid:!hasError\n  })\n}\n  render(){\n    //console.log(this.state)\n    return(\n      <div className='add-new-folder-container'>\n        <form className='add-new-folder-form'\n        onSubmit={(e)=>this.formSubmithandle(e)}>\n        <h5>Create a folder</h5>\n      \n        <label> Name:\n        <input id='add-folder' name='add-folder'\n          onChange={(e)=>this.handleInput(e.target.value)}/>\n          <ValidateFolderName hasError={!this.state.nameValid} message={this.state.validationMessages.name}/>\n        </label>\n          <button type=\"submit\">Submit</button>\n        </form>\n        <Link to='/'>Back</Link>\n      </div>\n    )\n  }\n}\n\nexport default AddFolder"]},"metadata":{},"sourceType":"module"}